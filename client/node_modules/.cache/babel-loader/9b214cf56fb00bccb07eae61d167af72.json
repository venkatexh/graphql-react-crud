{"ast":null,"code":"var _jsxFileName = \"/workspace/MyWebDev/graphql_app/client/src/components/CarList.js\";\nimport React, { Component } from 'react';\nimport { gql } from 'apollo-boost';\nimport { graphql } from 'react-apollo';\nconst getCarsQuery = gql`\n{\n\tcars {\n\t\tname\n\t\tyear\n\t}\n}`;\n\nclass CarList extends Component {\n  displayCars() {\n    var data = this.props.data;\n\n    if (data.loading) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 12\n        }\n      }, \"Loading cars..\");\n    } else {\n      return data.cars.map(car => {\n        return /*#__PURE__*/React.createElement(\"li\", {\n          key: car.id,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 6\n          }\n        }, car.name);\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(\"ul\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 4\n      }\n    }, this.displayCars()));\n  }\n\n}\n\nexport default graphql(getCarsQuery)(CarList);","map":{"version":3,"sources":["/workspace/MyWebDev/graphql_app/client/src/components/CarList.js"],"names":["React","Component","gql","graphql","getCarsQuery","CarList","displayCars","data","props","loading","cars","map","car","id","name","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,MAAMC,YAAY,GAAGF,GAAI;;;;;;EAAzB;;AAQA,MAAMG,OAAN,SAAsBJ,SAAtB,CAAgC;AAC/BK,EAAAA,WAAW,GAAG;AACb,QAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWD,IAAtB;;AACA,QAAGA,IAAI,CAACE,OAAR,EAAiB;AAChB,0BAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAR;AACA,KAFD,MAEO;AACN,aAAOF,IAAI,CAACG,IAAL,CAAUC,GAAV,CAAcC,GAAG,IAAI;AAC3B,4BACC;AAAI,UAAA,GAAG,EAAGA,GAAG,CAACC,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoBD,GAAG,CAACE,IAAxB,CADD;AAGA,OAJM,CAAP;AAKA;AACD;;AACDC,EAAAA,MAAM,GAAG;AACR,wBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKT,WAAL,EADH,CADD,CADA;AAOA;;AArB8B;;AAwBhC,eAAeH,OAAO,CAACC,YAAD,CAAP,CAAsBC,OAAtB,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { gql } from 'apollo-boost'\nimport { graphql } from 'react-apollo'\n\nconst getCarsQuery = gql`\n{\n\tcars {\n\t\tname\n\t\tyear\n\t}\n}`\n\nclass CarList extends Component {\n\tdisplayCars() {\n\t\tvar data = this.props.data\n\t\tif(data.loading) {\n\t\t\treturn (<div>Loading cars..</div>)\n\t\t} else {\n\t\t\treturn data.cars.map(car => {\n\t\t\t\treturn (\n\t\t\t\t\t<li key= {car.id} >{car.name}</li>\n\t\t\t\t)\n\t\t\t})\n\t\t}\n\t}\n\trender() {\n\t\treturn (\n\t\t<div>\n\t\t\t<ul>\n\t\t\t\t{ this.displayCars() }\n\t\t\t</ul>\n\t\t</div>\n\t\t);\n\t}\n}\n\nexport default graphql(getCarsQuery)(CarList);"]},"metadata":{},"sourceType":"module"}